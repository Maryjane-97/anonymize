const faker = require('faker');
const fs = require('fs');
var Papa = require('papaparse');

let data = fs.readFileSync('./drivers.csv', 'utf-8');

//Generates rider Id and Email objects by taking in input (drivers.csv) and generates riderIdEmailPairs.json
const generateRiderIdEmails = (data) => {
    let output = [];
    let tempId;
    let tempEmail;
    for (let i = 1; i < data.length - 1; i++) {
        tempId = data[i][0];
        tempEmail = data[i][1];
        let tempObject = {
            "id":tempId,
            "email":tempEmail
        }
        output.push(tempObject);
    } 
    let riders = {
        data: output
    }
    var dictstring = JSON.stringify(riders);
    var fs = require('fs');
    fs.writeFile("riderIdEmailPairs.json", dictstring, function(err, result) {
        if(err) console.log('error', err);
    });

    return { fields: data[0], result: output };
};

Papa.parse(data, {
	complete: function(results) {
        const { fields, result } = generateRiderIdEmails(results.data);
	}
});


/*
    This is the function which takes in 2 inputs:
    1. output generated by generateRiderIdEmails(riderIdEmailPairs.json) 
    2. emails.csv
    The function gets the emails by a loop from emails.csv, checks it in riderIdEmailPairs.json and when it finds the email
    in riderIdEmailPairs.json, it adds it to riderIds.json which is a file of all riderIds(only) that have to be deleted
*/
// const generateRiderIdsToDelete = (riderIdEmailPairs) => {

// };



//This is the function which calls the MTribes endpoint to delete/anonymize the riders by looping through all riderIds generated by generateRiderIdsToDelete()
// const anonymizeRiders = (riderIds) => {

// };